# k8s.bu
variant: fcos
version: 1.5.0

ignition:
   config: 
     merge: 
        - local: ./k8s-base.ign

systemd:
  units:
    - name: fck8s-helm-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Set up Helm
        Requires=network-online.target
        After=network-online.target
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-helm.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-node-ready-and-schedulable.service
      enabled: true
      contents: |
        [Unit]
        Description=Wait for a node ready and schedulable
        Requires=fck8s-k8s-setup-init.service
        After=fck8s-k8s-setup-init.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/node-ready-and-schedulable.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-taint-master-schedulable.service
      enabled: true
      contents: |
        [Unit]
        Description=Taint Master Node as Schedulable
        Requires=fck8s-k8s-setup-init.service
        After=fck8s-k8s-setup-init.service
        PartOf=fck8s-k8s-setup-init.service

        [Service]
        Type=oneshot
        ExecStart=setup-taint-master-scheduleable.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-metric-server-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Metric Server
        Requires=fck8s-node-ready-and-schedulable.service
        After=fck8s-node-ready-and-schedulable.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-metrics.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-dashboard-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Dashboard
        Requires=fck8s-node-ready-and-schedulable.service
        Requires=fck8s-helm-setup.service
        After=fck8s-node-ready-and-schedulable.service fck8s-helm-setup.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-dashboard.sh
        RemainAfterExit=yes
        WorkingDirectory=/root/
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-ingress-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Dashboard
        Requires=fck8s-dashboard-setup.service
        After=fck8s-dashboard-setup.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-ingress.sh
        RemainAfterExit=yes
        WorkingDirectory=/root/
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-topolvm-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Set up topolvm
        Requires=fck8s-node-ready-and-schedulable.service
        Requires=fck8s-lvm-setup.service
        Requires=fck8s-helm-setup.service
        After=fck8s-node-ready-and-schedulable.service fck8s-lvm-setup.service fck8s-helm-setup.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-topolvm.sh
        RemainAfterExit=yes
        WorkingDirectory=/root/
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-calico-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Set up Calico
        Requires=fck8s-node-ready-and-schedulable.service
        Requires=fck8s-helm-setup.service
        After=fck8s-node-ready-and-schedulable.service fck8s-helm-setup.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-calico.sh
        RemainAfterExit=yes
        WorkingDirectory=/root/
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-wait-default-service-account.service
      enabled: true
      contents: |
        [Unit]
        Description=Wait default service account creation
        Requires=fck8s-node-ready-and-schedulable.service
        After=fck8s-node-ready-and-schedulable.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/wait-default-service-account.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-setup-ovs-cni.service
      enabled: true
      contents: |
        [Unit]
        Description=Setup ovs cni
        Requires=fck8s-node-ready-and-schedulable.service
        After=fck8s-node-ready-and-schedulable.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-ovs-cni.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-setup-metallb.service
      enabled: true
      contents: |
        [Unit]
        Description=Setup MetalLB
        Requires=fck8s-node-ready-and-schedulable.service
        After=fck8s-node-ready-and-schedulable.service
        
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-metallb.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-custom-manifests-setup.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Custom Manifests
        Requires=fck8s-wait-default-service-account.service
        After=fck8s-wait-default-service-account.service
         
        [Service]
        Type=oneshot
        ExecStart=/usr/local/bin/setup-custom-manifests.sh
        RemainAfterExit=yes
        
        [Install]
        WantedBy=multi-user.target
    - name: fck8s-update-routes.service
      enabled: true
      contents: |
        [Unit]
        Description=Update Kubernetes Ingress Routes for the Dashboard
        Requires=fck8s-ingress-setup.service
        After=fck8s-ingress-setup.service
        
        [Service]
        ExecStart=/usr/local/bin/update-routes.sh
        Type=oneshot
        WorkingDirectory=/root/

        [Install]
        WantedBy=multi-user.target
    - name: fck8s-update-routes.timer
      enabled: true
      contents: |
        [Unit]
        Description=Timer to periodically update Kubernetes Ingress for the Dashboard
        Requires=fck8s-node-ready-and-schedulable.service
        Requires=fck8s-ingress-setup.service
        After=fck8s-node-ready-and-schedulable.service fck8s-ingress-setup.service
        
        [Timer]
        OnCalendar=*:0/10
        
        [Install]
        WantedBy=multi-user.target
storage:
  files:
    - path: "/etc/k8s-config.yaml"
      mode: 420
      contents:
        local: yaml/k8s-config.yaml
    - path: "/etc/yum.repos.d/kubernetes.repo"
      mode: 420
      contents:
        local: repo/kubernetes.repo
    - path: /usr/local/share/lvm-values.yaml
      mode: 0420
      contents:
        local: yaml/lvm-values.yaml
    - path: /usr/local/share/ingress-values.yaml
      mode: 0420
      contents:
        local: yaml/ingress-values.yaml
    - path: /usr/local/share/metal-lb.yaml
      mode: 0420
      contents:
        local: yaml/metal-lb.yaml
    - path: /usr/local/share/dashboard-users.yaml
      mode: 0420
      contents:
        local: yaml/dashboard-users.yaml
    - path: /usr/local/share/dashboard-ingress-routes.yaml
      mode: 0420
      contents:
        local: yaml/dashboard-ingress-routes.yaml
    - path: /usr/local/share/calico-resources.yaml
      mode: 0420
      contents:
        local: yaml/calico-resources.yaml

    - path: "/usr/local/bin/setup-k8s-init.sh"
      mode: 764
      contents:
        local: overrides/bootstrap/setup-k8s-init.sh
    - path: "/usr/local/bin/generate_join.sh"
      mode: 764
      contents:
        local: overrides/bootstrap/generate_join.sh
    - path: "/usr/local/bin/generate-kubelet-config.sh"
      mode: 764
      contents:
        local: overrides/bootstrap/generate-kubelet-config.sh
    - path: "/usr/local/bin/enable-cluster.sh"
      mode: 764
      contents:
        local: overrides/bootstrap/enable-cluster.sh